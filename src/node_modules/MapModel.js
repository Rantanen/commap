
/*
 * MapModel
 *   \
 *    Players
 *      |
 *      |\
 *      | Continents
 *      |   \
 *      |    Markers
 *       \
 *        Information
 *      
 */

var EventEmitter = require( 'events' ).EventEmitter;

var MapModel = function ( data ) {
    this.data = data || {
        continents: [ 'indar', 'esamir', 'amerish' ],
        players: {}
    }
};
MapModel.extends( EventEmitter );

MapModel.prototype.setData = function( data ) {
    this.data = data
    this.reconstructMappings();
};

MapModel.prototype.updatePlayer = function( player ) {
    this.data.players[ player.id ] = player;
    this.emit( "playerupdated", player );
};

MapModel.prototype.removePlayer = function( name ) {
    var player = this.data.players[ name ];
    if( !player ) return;

    delete this.data.players[ name ];
    this.emit( "playerremoved", player );
};

MapModel.prototype.updateMarker = function( marker ) {

    var player = this.data.players[ marker.player ];
    if( !player ) return;

    player.markers[ marker.id ] = marker;

    this.emit( "markerupdated", marker );
};

MapModel.prototype.removeMarker = function( playerName, id ) {
    
    var player = this.data.players[ playerName ];
    if( !player ) return;

    var marker = player.markers[ id ];
    if( !marker ) return;

    this.emit( "markerremoved", marker );
};

MapModel.prototype.reconstructMappings = function () {
};

module.exports = MapModel;

