
/*global $, document */
"use strict";

var EventEmitter = require('events').EventEmitter;

var MapSelector = function( element, game ) {
    var self = this;

    this.element = element;
    this.continents = game.getContinents();

    this.container = $('<div>').css({
        position: 'relative',
        width: '10em',
        margin: 'auto'
    });
    this.label = $('<h1>').css({
        display: 'inline'
    });
    this.dropdown = $('<div>').css({
        width: '100%',
        position: 'absolute',
        left: '0px',
        top: '1em',
        display: 'none',
        'z-index': 100001
    });
    this.dropdownArrow = $('<img src="dropdown_arrow.png">').css({
        cursor: 'pointer'
    }).on( 'click', function () {
        self.showDropdown();
    });

    element.empty();
    this.element.append( this.container.append( this.label, this.dropdownArrow, this.dropdown ) );

    $.each( this.continents, function( k, c ) {
        var e = $( '<h2>' ).text( c ).css({
            cursor: 'pointer'
        }).on( 'click', function () {
            self.selectContinent( c );
        });
        self.dropdown.append( $('<div>').append( e ) );
    });

    this.selectContinent( this.continents[0] );
};
MapSelector.extends( EventEmitter );

MapSelector.prototype.selectContinent = function( continent ) {
    this.currentContinent = continent;
    this.label.text( continent );
    this.emit( 'continentChanged', continent );
};

MapSelector.prototype.showDropdown = function () {
    var self = this;
    this.dropdown.show();

    var hidePopup = function () {
        self.dropdown.hide();
        $(document).off( 'click', hidePopup );
    };

    // Delay the hidePopup binding a bit so it won't catch this click.
    setTimeout( function() {
        $(document).on( 'click', hidePopup );
    }, 100 );
};

module.exports = MapSelector;

