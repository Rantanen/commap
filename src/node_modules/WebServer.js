
/*global load_on_server */
"use strict";

var Player = require('Player');
var MapModel = require('MapModel');

if (environment === 'server') {
}

var nextClientId = 0;
var WebServer = function (server) {
    var self = this;
    this.server = server;
    this.players = {};
    this.map = new MapModel();
};

WebServer.prototype.connect = function (client) {
    client.connected( this.map.data );
};

WebServer.prototype.disconnect = function (client) {
};

WebServer.prototype.logIn = function (client, name, cb) {
    if( !cb ) return;

    client.name = name;
    if( !this.players[ name ] ) {
        this.players[ name ] = new Player( name, name );
        this.map.updatePlayer( this.players[ name ] );
        client.broadcast.updatePlayer( this.players[ name ] );
    }

    console.log( name + " logged in." );
    cb( this.players[ name ] );
};

WebServer.prototype.updateMarker = function (client, marker) {
    console.log( client.name + " updated marker " + marker.id );
    this.map.updateMarker( marker );
    client.broadcast.updateMarker( marker );
};

WebServer.prototype.removeMarker = function (client, owner, markerId) {
    delete this.players[ owner ].markers[ markerId ];
    client.broadcast.removeMarker( owner, markerId );
};

WebServer.prototype._init = function (client) {
};

module.exports = WebServer;

